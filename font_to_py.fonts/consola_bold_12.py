# Code generated by font-to-py.py.
# Font: consolab.ttf
version = '0.26'

def height():
    return 12

def max_width():
    return 8

def hmap():
    return True

def reverse():
    return False

def monospaced():
    return False

def min_ch():
    return 32

def max_ch():
    return 126


def glyphs():
    for c in """? !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~""":
        yield c, get_ch(c)

_font =\
b'\x07\x00\x00\x00\xe0\x30\x30\x30\xe0\x00\xc0\xc0\x00\x00\x07\x00'\
b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00'\
b'\xc0\xc0\xc0\xc0\xc0\x00\xc0\xc0\x00\x00\x07\x00\x00\x00\xd8\xd8'\
b'\xd8\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00\x28\x28\xfc\x28'\
b'\x50\xfc\x50\x50\x00\x00\x07\x00\x00\x10\x78\xd0\xd0\xf0\x3c\x2c'\
b'\x2c\xf8\x20\x00\x07\x00\x00\x00\xe4\xa8\xb8\xf0\x3c\x34\x54\x9c'\
b'\x00\x00\x08\x00\x00\x00\x38\x6c\x6c\x38\x7e\xce\xc6\x7f\x00\x00'\
b'\x07\x00\x00\x00\xc0\xc0\xc0\x00\x00\x00\x00\x00\x00\x00\x07\x00'\
b'\x00\x30\x60\x60\xc0\xc0\xc0\xc0\xc0\x60\x60\x30\x07\x00\x00\xc0'\
b'\x60\x60\x30\x30\x30\x30\x30\x60\x60\xc0\x07\x00\x00\x00\x30\xfc'\
b'\x30\xfc\x30\x00\x00\x00\x00\x00\x07\x00\x00\x00\x00\x00\x30\x30'\
b'\xfc\x30\x30\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00'\
b'\x60\x60\x20\xc0\x07\x00\x00\x00\x00\x00\x00\x00\xf0\x00\x00\x00'\
b'\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\xc0\xc0\x00\x00'\
b'\x07\x00\x00\x00\x08\x18\x10\x30\x20\x20\x60\x40\xc0\x00\x07\x00'\
b'\x00\x00\x3c\x64\xce\xde\xf6\xe6\x4c\x78\x00\x00\x07\x00\x00\x00'\
b'\x30\x70\xb0\x30\x30\x30\x30\xfc\x00\x00\x07\x00\x00\x00\x70\x98'\
b'\x18\x18\x30\x60\x40\xf8\x00\x00\x07\x00\x00\x00\xf8\x0c\x0c\x78'\
b'\x0c\x0c\x0c\xf8\x00\x00\x07\x00\x00\x00\x1c\x3c\x2c\x4c\xcc\xfc'\
b'\x0c\x0c\x00\x00\x07\x00\x00\x00\xf8\xc0\xc0\xf0\x18\x18\x18\xf0'\
b'\x00\x00\x07\x00\x00\x00\x38\x60\xc0\xf8\xcc\xcc\xcc\x78\x00\x00'\
b'\x07\x00\x00\x00\xf8\x18\x10\x30\x20\x60\x60\x40\x00\x00\x07\x00'\
b'\x00\x00\x78\xcc\xcc\x78\x7c\xcc\xcc\x78\x00\x00\x07\x00\x00\x00'\
b'\x78\xcc\xcc\xcc\x7c\x0c\x18\x70\x00\x00\x07\x00\x00\x00\x00\x00'\
b'\xc0\xc0\x00\x00\xc0\xc0\x00\x00\x07\x00\x00\x00\x00\x00\x60\x60'\
b'\x00\x00\x60\x60\x20\xc0\x07\x00\x00\x00\x00\x18\x30\x60\xc0\x60'\
b'\x30\x18\x00\x00\x07\x00\x00\x00\x00\x00\x00\xf8\x00\xf8\x00\x00'\
b'\x00\x00\x07\x00\x00\x00\x00\xc0\x60\x30\x18\x30\x60\xc0\x00\x00'\
b'\x07\x00\x00\x00\xe0\x30\x30\x30\xe0\x00\xc0\xc0\x00\x00\x07\x00'\
b'\x00\x00\x38\x44\x44\xb4\xd4\xf4\xf8\x80\xc0\x78\x07\x00\x00\x00'\
b'\x70\x50\x50\x50\xd8\xf8\x88\x88\x00\x00\x07\x00\x00\x00\xf8\xcc'\
b'\xcc\xf8\xcc\xcc\xcc\xf8\x00\x00\x07\x00\x00\x00\x78\x60\xc0\xc0'\
b'\xc0\xc0\xe0\x78\x00\x00\x07\x00\x00\x00\xf8\xcc\xcc\xcc\xcc\xcc'\
b'\xd8\xf0\x00\x00\x07\x00\x00\x00\xf8\xc0\xc0\xf8\xc0\xc0\xc0\xf8'\
b'\x00\x00\x07\x00\x00\x00\xf8\xc0\xc0\xc0\xf8\xc0\xc0\xc0\x00\x00'\
b'\x07\x00\x00\x00\x38\x64\xc0\xc0\xdc\xcc\x6c\x3c\x00\x00\x07\x00'\
b'\x00\x00\xcc\xcc\xcc\xfc\xcc\xcc\xcc\xcc\x00\x00\x07\x00\x00\x00'\
b'\xf0\x60\x60\x60\x60\x60\x60\xf0\x00\x00\x07\x00\x00\x00\xf8\x18'\
b'\x18\x18\x18\x18\x98\x70\x00\x00\x07\x00\x00\x00\xcc\xd8\xd0\xf0'\
b'\xf0\xd0\xd8\xcc\x00\x00\x07\x00\x00\x00\xc0\xc0\xc0\xc0\xc0\xc0'\
b'\xc0\xf8\x00\x00\x07\x00\x00\x00\xd8\xd8\xd8\xd8\xa8\xa8\x88\x88'\
b'\x00\x00\x07\x00\x00\x00\xec\xec\xec\xec\xdc\xdc\xdc\xdc\x00\x00'\
b'\x07\x00\x00\x00\x3c\x64\xc6\xc6\xc6\xc6\x4c\x78\x00\x00\x07\x00'\
b'\x00\x00\xf8\xcc\xcc\xcc\xf8\xc0\xc0\xc0\x00\x00\x07\x00\x00\x00'\
b'\x3c\x64\xc6\xc6\xc6\xc6\xcc\x78\x18\x0e\x07\x00\x00\x00\xf8\xcc'\
b'\xcc\xcc\xf0\xd8\xd8\xc8\x00\x00\x07\x00\x00\x00\x78\xc0\xc0\xf0'\
b'\x3c\x0c\x0c\xf8\x00\x00\x07\x00\x00\x00\xfc\x30\x30\x30\x30\x30'\
b'\x30\x30\x00\x00\x07\x00\x00\x00\xcc\xcc\xcc\xcc\xcc\xcc\xcc\x78'\
b'\x00\x00\x07\x00\x00\x00\x88\x88\xd8\xd8\x50\x50\x70\x70\x00\x00'\
b'\x07\x00\x00\x00\x88\x88\xa8\xa8\xd8\xd8\xd8\xd8\x00\x00\x07\x00'\
b'\x00\x00\xf8\x70\x70\x20\x70\x50\xd8\xc8\x00\x00\x07\x00\x00\x00'\
b'\xc6\x4c\x6c\x78\x30\x30\x30\x30\x00\x00\x07\x00\x00\x00\xf8\x10'\
b'\x30\x20\x20\x60\x40\xf8\x00\x00\x07\x00\x00\xf0\xc0\xc0\xc0\xc0'\
b'\xc0\xc0\xc0\xc0\xc0\xf0\x07\x00\x00\x00\xc0\x40\x60\x20\x30\x10'\
b'\x18\x08\x0c\x00\x07\x00\x00\xf0\x30\x30\x30\x30\x30\x30\x30\x30'\
b'\x30\xf0\x07\x00\x00\x00\x20\x50\xd8\xd8\x00\x00\x00\x00\x00\x00'\
b'\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xfe\x00\x07\x00'\
b'\x00\x70\x38\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\x00\x00\x00'\
b'\x00\x00\x78\x0c\x7c\xcc\xcc\x7c\x00\x00\x07\x00\x00\x00\xc0\xc0'\
b'\xf8\xcc\xcc\xcc\xcc\xf8\x00\x00\x07\x00\x00\x00\x00\x00\x78\xc0'\
b'\xc0\xc0\xc0\x78\x00\x00\x07\x00\x00\x00\x0c\x0c\x7c\xcc\xcc\xcc'\
b'\xcc\x7c\x00\x00\x07\x00\x00\x00\x00\x00\x78\xcc\xfc\xc0\xe0\x7c'\
b'\x00\x00\x07\x00\x00\x00\x1c\x30\x30\x78\x30\x30\x30\x30\x00\x00'\
b'\x07\x00\x00\x00\x00\x00\x7c\xd8\xd8\xf0\xc0\xfc\xcc\xf8\x07\x00'\
b'\x00\x00\xc0\xc0\xf8\xcc\xcc\xcc\xcc\xcc\x00\x00\x07\x00\x00\x30'\
b'\x30\x00\xf0\x30\x30\x30\x30\xf8\x00\x00\x07\x00\x00\x18\x18\x00'\
b'\xf8\x18\x18\x18\x18\x18\x18\xf0\x07\x00\x00\x00\xc0\xc0\xc8\xd8'\
b'\xf0\xf8\xd8\xcc\x00\x00\x07\x00\x00\x00\xe0\x60\x60\x60\x60\x60'\
b'\x60\xf0\x00\x00\x07\x00\x00\x00\x00\x00\xfc\xfc\xfc\xfc\xfc\xfc'\
b'\x00\x00\x07\x00\x00\x00\x00\x00\xf8\xcc\xcc\xcc\xcc\xcc\x00\x00'\
b'\x07\x00\x00\x00\x00\x00\x78\xcc\xcc\xcc\xcc\x78\x00\x00\x07\x00'\
b'\x00\x00\x00\x00\xf8\xcc\xcc\xcc\xcc\xf8\xc0\xc0\x07\x00\x00\x00'\
b'\x00\x00\x7c\xcc\xcc\xcc\xcc\x7c\x0c\x0c\x07\x00\x00\x00\x00\x00'\
b'\xfc\xcc\xc0\xc0\xc0\xc0\x00\x00\x07\x00\x00\x00\x00\x00\x78\xc0'\
b'\xe0\x38\x18\xf0\x00\x00\x07\x00\x00\x00\x30\x30\xfc\x30\x30\x30'\
b'\x30\x1c\x00\x00\x07\x00\x00\x00\x00\x00\xcc\xcc\xcc\xcc\xcc\x7c'\
b'\x00\x00\x07\x00\x00\x00\x00\x00\x88\xc8\xd8\x50\x50\x60\x00\x00'\
b'\x07\x00\x00\x00\x00\x00\x88\x88\xa8\xd8\xd8\xd8\x00\x00\x07\x00'\
b'\x00\x00\x00\x00\xcc\x78\x30\x30\x58\x8c\x00\x00\x07\x00\x00\x00'\
b'\x00\x00\x88\xd8\xd8\x50\x70\x60\x60\xc0\x07\x00\x00\x00\x00\x00'\
b'\xf8\x10\x30\x60\x40\xf8\x00\x00\x07\x00\x00\x1c\x30\x30\x30\x30'\
b'\xe0\x30\x30\x30\x30\x1c\x07\x00\xc0\xc0\xc0\xc0\xc0\xc0\xc0\xc0'\
b'\xc0\xc0\xc0\xc0\x07\x00\x00\xe0\x30\x30\x30\x30\x1c\x30\x30\x30'\
b'\x30\xe0\x07\x00\x00\x00\x00\x00\x00\x72\xba\x9c\x00\x00\x00\x00'\

_index =\
b'\x00\x00\x0e\x00\x0e\x00\x1c\x00\x1c\x00\x2a\x00\x2a\x00\x38\x00'\
b'\x38\x00\x46\x00\x46\x00\x54\x00\x54\x00\x62\x00\x62\x00\x70\x00'\
b'\x70\x00\x7e\x00\x7e\x00\x8c\x00\x8c\x00\x9a\x00\x9a\x00\xa8\x00'\
b'\xa8\x00\xb6\x00\xb6\x00\xc4\x00\xc4\x00\xd2\x00\xd2\x00\xe0\x00'\
b'\xe0\x00\xee\x00\xee\x00\xfc\x00\xfc\x00\x0a\x01\x0a\x01\x18\x01'\
b'\x18\x01\x26\x01\x26\x01\x34\x01\x34\x01\x42\x01\x42\x01\x50\x01'\
b'\x50\x01\x5e\x01\x5e\x01\x6c\x01\x6c\x01\x7a\x01\x7a\x01\x88\x01'\
b'\x88\x01\x96\x01\x96\x01\xa4\x01\xa4\x01\xb2\x01\xb2\x01\xc0\x01'\
b'\xc0\x01\xce\x01\xce\x01\xdc\x01\xdc\x01\xea\x01\xea\x01\xf8\x01'\
b'\xf8\x01\x06\x02\x06\x02\x14\x02\x14\x02\x22\x02\x22\x02\x30\x02'\
b'\x30\x02\x3e\x02\x3e\x02\x4c\x02\x4c\x02\x5a\x02\x5a\x02\x68\x02'\
b'\x68\x02\x76\x02\x76\x02\x84\x02\x84\x02\x92\x02\x92\x02\xa0\x02'\
b'\xa0\x02\xae\x02\xae\x02\xbc\x02\xbc\x02\xca\x02\xca\x02\xd8\x02'\
b'\xd8\x02\xe6\x02\xe6\x02\xf4\x02\xf4\x02\x02\x03\x02\x03\x10\x03'\
b'\x10\x03\x1e\x03\x1e\x03\x2c\x03\x2c\x03\x3a\x03\x3a\x03\x48\x03'\
b'\x48\x03\x56\x03\x56\x03\x64\x03\x64\x03\x72\x03\x72\x03\x80\x03'\
b'\x80\x03\x8e\x03\x8e\x03\x9c\x03\x9c\x03\xaa\x03\xaa\x03\xb8\x03'\
b'\xb8\x03\xc6\x03\xc6\x03\xd4\x03\xd4\x03\xe2\x03\xe2\x03\xf0\x03'\
b'\xf0\x03\xfe\x03\xfe\x03\x0c\x04\x0c\x04\x1a\x04\x1a\x04\x28\x04'\
b'\x28\x04\x36\x04\x36\x04\x44\x04\x44\x04\x52\x04\x52\x04\x60\x04'\
b'\x60\x04\x6e\x04\x6e\x04\x7c\x04\x7c\x04\x8a\x04\x8a\x04\x98\x04'\
b'\x98\x04\xa6\x04\xa6\x04\xb4\x04\xb4\x04\xc2\x04\xc2\x04\xd0\x04'\
b'\xd0\x04\xde\x04\xde\x04\xec\x04\xec\x04\xfa\x04\xfa\x04\x08\x05'\
b'\x08\x05\x16\x05\x16\x05\x24\x05\x24\x05\x32\x05\x32\x05\x40\x05'\

_mvfont = memoryview(_font)

def get_ch(ch):
    ordch = ord(ch)
    ordch = ordch + 1 if ordch >= 32 and ordch <= 126 else 63
    idx_offs = 4 * (ordch - 32)
    offset = int.from_bytes(_index[idx_offs : idx_offs + 2], 'little')
    next_offs = int.from_bytes(_index[idx_offs + 2 : idx_offs + 4], 'little')
    width = int.from_bytes(_font[offset:offset + 2], 'little')
    return _mvfont[offset + 2:next_offs], 12, width
 
